{"version":3,"sources":["components/NavBar.js","components/EmployeeCard.js","components/Container.js","components/SortBar.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","src","width","height","alt","loading","EmployeeCard","props","list","map","element","index","key","style","picture","large","name","title","first","last","gender","location","city","state","Container","children","SortBar","type","id","value","onChange","sort","htmlFor","defaultChecked","filter","App","useState","setList","modList","setModList","useEffect","Promise","resolve","reject","axios","get","then","data","console","log","results","catch","error","res","NavBar","e","target","sortAZ","a","b","sortZA","filtered","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1518b591.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = () => {\n  return (\n    <nav className=\"navbar navbar-light bg-light alert alert-warning\">\n      <a className=\"navbar-brand\" href=\"#\">\n        <img\n          src=\"https://icons-for-free.com/download-icon-svg+employee+general+human+human+list+list+member+icon-1320185155662043477_512.png\"\n          width=\"30\"\n          height=\"30\"\n          className=\"d-inline-block align-top\"\n          alt=\"\"\n          loading=\"lazy\"\n        />\n        Employee Directory\n      </a>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst EmployeeCard = (props) => {\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"row row-cols-lg-3 row-cols-md-1\">\n        {props.list.map((element, index) => (\n          <div key={index} className=\"col mb-4\">\n            <div className=\"card h-100\" style={{ width: \"22rem\" }}>\n              <img\n                src={element.picture.large}\n                className=\"card-img-top\"\n                alt=\"employee-directory\"\n              />\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">\n                  Name:\n                  {\" \" +\n                    element.name.title +\n                    \" \" +\n                    element.name.first +\n                    \" \" +\n                    element.name.last}\n                </h5>\n                <p className=\"card-text\">Gender: {element.gender}</p>\n                <small className=\"card-text\">\n                  Location: {element.location.city}, {element.location.state}\n                </small>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeCard;\n","import React from \"react\";\n\nconst Container = (props) => {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">{props.children}</div>\n    </div>\n  );\n};\n\nexport default Container;\n","import React from \"react\";\n\nconst SortBar = (props) => {\n  return (\n    <div className=\"col-md-12\">\n      <form>\n        <h4>Sort by First Name</h4>\n\n        <fieldset className=\"form-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-3\">\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"radio\"\n                  name=\"gridRadios\"\n                  id=\"gridRadios1\"\n                  value=\"az\"\n                  onChange={props.sort}\n                />\n                <label className=\"form-check-label\" htmlFor=\"gridRadios1\">\n                  A - Z\n                </label>\n              </div>\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"radio\"\n                  name=\"gridRadios\"\n                  id=\"gridRadios2\"\n                  value=\"za\"\n                  onChange={props.sort}\n                />\n                <label className=\"form-check-label\" htmlFor=\"gridRadios2\">\n                  Z - A\n                </label>\n              </div>\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"radio\"\n                  name=\"gridRadios\"\n                  id=\"gridRadios2\"\n                  value=\"none\"\n                  defaultChecked\n                  onChange={props.sort}\n                />\n                <label className=\"form-check-label\" htmlFor=\"gridRadios2\">\n                  None\n                </label>\n              </div>\n            </div>\n          </div>\n        </fieldset>\n      </form>\n\n      <form>\n        <h4>Filter by Gender</h4>\n        <div className=\"form-group\">\n          <select id=\"gender\" className=\"form-group\" onChange={props.filter}>\n            <option>both</option>\n            <option>male</option>\n            <option>female</option>\n          </select>\n        </div>\n        <br />\n      </form>\n    </div>\n  );\n};\n\nexport default SortBar;\n","import React, { useState, useEffect } from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport EmployeeCard from \"./components/EmployeeCard\";\nimport axios from \"axios\";\nimport Container from \"./components/Container\";\nimport SortBar from \"./components/SortBar\";\n\nfunction App() {\n  const [list, setList] = useState([]);\n  const [modList, setModList] = useState([]);\n\n  const getData = () => {\n    return new Promise((resolve, reject) => {\n      axios\n        .get(\"https://randomuser.me/api/?results=10&nat=us\")\n        .then(({ data }) => {\n          console.log(data);\n          resolve(data.results);\n        })\n        .catch((error) => reject(error));\n    });\n  };\n\n  useEffect(() => {\n    getData()\n      .then((res) => {\n        setList(res);\n        setModList(res);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  const sort = (e) => {\n    switch (e.target.value) {\n      case \"az\":\n        const sortAZ = [...list].sort(function (a, b) {\n          if (a.name.first < b.name.first) {\n            return -1;\n          }\n          if (a.name.first > b.name.first) {\n            return 1;\n          }\n          return 0;\n        });\n        console.log(\"sorted:\", sortAZ);\n        setModList([...sortAZ]);\n        break;\n\n      case \"za\":\n        const sortZA = [...list].sort(function (b, a) {\n          if (a.name.first < b.name.first) {\n            return -1;\n          }\n          if (a.name.first > b.name.first) {\n            return 1;\n          }\n          return 0;\n        });\n        console.log(\"sorted:\", sortZA);\n        setModList([...sortZA]);\n        break;\n\n      case \"none\":\n        setModList([...list]);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const filter = (e) => {\n    if (e.target.value !== \"both\") {\n      const filtered = list.filter(\n        (element) => element.gender === e.target.value\n      );\n      setModList([...filtered]);\n    } else {\n      setModList([...list]);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Container>\n        <SortBar sort={sort} filter={filter} />\n        <EmployeeCard list={modList} />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}